import cv2
cap = cv2.VideoCapture("a.mp4")
fps = int(cap.get(cv2.CAP_PROP_FPS))
frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

# count = 0
if cap.isOpened():
    for i in range(frame_count):
        ret, frame = cap.read()
        if ret:
            # if count%int(fps)==0:
            cv2.imwrite("./img/{}.jpg".format(i), frame)
            # count += 1
        # else:
        #     break
cap.release()


image_folder = './img'  # 替换为你的图片文件夹路径
# 获取文件夹中的所有图片文件
images = [img for img in os.listdir(image_folder) if img.endswith(".jpg") or img.endswith(".png")]
# 自定义排序函数，提取数字部分进行排序
def natural_sort_key(filename):
    return int(filename.split(".")[0])

# 对图像列表进行排序
images.sort(key=natural_sort_key)

print(images)

for i in images:
    image = cv2.imread("./img/{}".format(i))
    gray_image = cv2.cvtColor(image, cv2.IMREAD_GRAYSCALE)

    blurred = cv2.GaussianBlur(255 - gray_image, (21, 21), 0)
    pencil_sketch = cv2.divide(gray_image, 255 - blurred, scale=256.0)
    cv2.imwrite("./img2/{}".format(i), pencil_sketch)



import cv2
import os

# 设置图片文件夹路径和输出视频文件名
image_folder = './img2'  # 替换为你的图片文件夹路径
video_name = './img/1.avi'  # 输出视频文件名



# 确保文件夹不为空
if not images:
    print("没有找到任何图片！")
    exit()

# 读取第一张图片以获取宽度和高度
first_image_path = os.path.join(image_folder, images[0])
frame = cv2.imread(first_image_path)
height, width, layers = frame.shape

# 使用 VideoWriter 创建视频
fourcc = cv2.VideoWriter_fourcc(*'XVID')  # 编码格式
video = cv2.VideoWriter(video_name, fourcc, 25, (width, height))  # 25 FPS

# 将所有图片写入视频
for image in images:
    img_path = os.path.join(image_folder, image)
    video.write(cv2.imread(img_path))

# 释放视频资源
video.release()
cv2.destroyAllWindows()

print("视频已生成：", video_name)
